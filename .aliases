

alias awslocal="aws --endpoint-url=http://localhost:4566"
alias zjm="zj -s main -l main"
alias zj="zellij"

# copy_remote_file root@192.168.0.1 ~/remote/path local/path
alias copy_remote_file="rsync -avzh --progress -e 'ssh -i ~/.ssh/id_ed25519'  $1 $2"

alias gb="git branch"
alias gc="git checkout"
alias ga="git add"
alias gd="git diff"
alias gs="git status"
alias tf="terraform"

alias bored="nmap -Pn -sS -p 80 -iR 0 --open"

alias battery="upower -i `upower -e | grep 'BAT'`"

alias bombard="docker run -ti --rm alpine/bombardier -c 1000 -d 3600s -l $1"

alias myip="curl http://ipecho.net/plain; echo"

# elastio hetzner runner
alias hetzner_runner_connect='ssh -i ./.ssh/id_ed25519 root@5.9.22.202'

# EC2 instance rsync
# example: remote-copy some_dir remote_user@address.com
alias remote-copy='rsync -avzh --progress -e "ssh -i ~/.ssh/agnatovskyi.pem" $1  $2:~/'
>>>>>>> 0912d4a (refresh aliases)

# Connect my droplet
alias botinok="ssh -i ~/.ssh/id_rsa root@167.172.97.246"

# pretty xev
alias xev-pretty="xev | grep -A2 --line-buffered '^KeyRelease' | sed -n '/keycode /s/^.*keycode \([0-9]*\).* (.*, \(.*\)).*$/\1 \2/p'"

# Alias for aws command that connects to localstack instead of real AWS server
alias aws-mock="aws --endpoint-url http://127.0.0.1:4566"
# Install cli completions for AWS cli
complete -C '/usr/local/bin/aws_completer' aws aws-mock

#py flask postgres go to dir & activate virtual environment
alias init_current_py='cd Documents/py/flask-pg-api/ && source flask-pg-api/bin/activate && export FLASK_APP=run.py'

#the graph container id after running new the graph node
alias set_graph_node=`CONTAINER_ID=$(docker container ls | grep graph-node | cut -d' ' -f1)`

#musl
alias rust-musl-builder='docker run --rm -it -v "$(pwd)":/home/rust/src ekidd/rust-musl-builder'

#git-rename 
alias git-rename="
OLD=${1:- };
NEW=${2:- };
echo old: $OLD new: $NEW;
git ls-files -z | xargs -0 sed -i -e 's/$OLD/$NEW/g'"

#say
alias say='
TEXT=${1:-"Hello there"}

spd-say $TEXT
'

#custom alert
alias alrt='
SLEE=${1:-300};
TEXT=$2;
echo "meeting in $DELAY";
HEADER="ALERT";
MESSAGE=$(echo "Zoom. Meeting. In " $DELAY "Seconds.");
notify-send -i terminal $HEADER $MESSAGE;

sleep $((SLEE-20));

MESSAGE="Zoom. Meeting. Now.";
notify-send -i terminal $HEADER $MESSAGE;

spd-say {$MESSAGE:-"Zoom. Meeting. Now"}
'





























alias explore='
  rnds=${1:-100};
  echo "rnds" $rnds
  for ((c=1; c<=$rnds; c++ ));
  do
      sleep 5;
      WIDS=`xdotool search --onlyvisible "gnome-terminal"`;
      xdotool search "Mozilla" windowactivate --sync;
      sleep 540;
      xdotool search "Visual Studio Code" windowactivate --sync;
      for id in $WIDS;
      do
          sleep 540;
          xdotool windowactivate $id;
      done;
      echo "done $c"
  done
  echo "done end"
  '
  alias work_test='
  rnds=${1:-3};
  echo "rnds" $rnds
  for ((c=1; c<=$rnds; c++ ));
  do
      sleep 5;
      WIDS=`xdotool search --onlyvisible "gnome-terminal"`;
      xdotool search "Mozilla" windowactivate --sync;
      sleep 1;
      xdotool search "Visual Studio Code" windowactivate --sync;
      for id in $WIDS;
      do
          sleep 1;
          xdotool windowactivate $id;
      done;
      echo "done $c"
  done
  echo "done end"
  '

